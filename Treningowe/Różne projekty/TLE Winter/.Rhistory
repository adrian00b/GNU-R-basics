xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(){
panel.abline(a = 0, b = 0)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(){
panel.abline(a = 0, b = 0)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(){
panel.xyplot()
panel.abline(a = 0, b = 0)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(a = 0, b = 0)
}
)
avg(1,2)
avg(c(1,2)
)
mean(1,2)
mean(c(1,2))
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(v = 0)
panel.ablinex(v = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(v = 0)
panel.abline(v = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
}
)
?abline
panel.text(1, 0, 'test')
?text
panel.text(10, 0, 'test')
panel.text(10, 5, 'test')
panel.abline(h = mean(percentage_point_diff$diff))
p3 + as.layer(p4)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.text(10, 5, 'test')
panel.abline(h = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.text(10, 5, 'test')
panel.abline(h = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.text(10, 5, 'test')
panel.abline(h = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.text(10, 5, 'test')
panel.abline(h = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.text(10, 0, 'test')
panel.abline(h = mean(percentage_point_diff$diff))
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20, mean(percentage_point_diff$diff), 'test')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20, mean(percentage_point_diff$diff) + 0.1, 'test')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20, mean(percentage_point_diff$diff) + 0.05, 'test')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20, mean(percentage_point_diff$diff) + 0.03, 'test')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test')
}
)
?text
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test', size = 5)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test', size = 14)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test', size = 14, cex = 5)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test', size = 14, cex = 0.7)
}
)
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test', size = 14, cex = 0.9)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.03, 'test', size = 14, cex = 0.9)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.3, mean(percentage_point_diff$diff) + 0.03, 'test', size = 14, cex = 0.9)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.01, 'test', size = 14, cex = 0.9)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.02, 'test', size = 14, cex = 0.9)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0)
panel.abline(h = mean(percentage_point_diff$diff))
panel.text(20.5, mean(percentage_point_diff$diff) + 0.02, 'average', size = 14, cex = 0.9)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.02, 'average', size = 14, cex = 0.9)
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.02, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.015, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.012, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed', lab = 'asd')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.012, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
panel.abline(h = 0, lty = 'dashed')
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.012, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.015, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
percentage_point_diff = tibble(level_no = wr_benchmark_20$level_no
, diff = wr_real_20$win_ratio - wr_benchmark_20$win_ratio)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.015, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.015, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
, key = list(columns = 2
, text = list(lab = c ('Benchmark', 'Average diff'))
, lines = list(lty = c('dashed', 'solid'), col = c('black', 'indianred1'))
)
)
xyplot( diff ~ level_no
, data = percentage_point_diff
, type = 'b'
, pch = 16
, panel = function(...){
panel.xyplot(...)
panel.abline(h = 0, lty = 'dashed')
panel.abline(h = mean(percentage_point_diff$diff), col = 'indianred1')
panel.text(20.5, mean(percentage_point_diff$diff) + 0.015, 'average', size = 14, cex = 0.9, col = 'indianred1')
}
, key = list(columns = 2
, text = list(lab = c ('Benchmark', 'Average diff'))
, lines = list(lty = c('dashed', 'solid'), col = c('black', 'indianred1'))
, cex = 0.8
)
)
rbern(1, 0.5)
install.packages("mc2d")
rbern(1, 0.5)
library(mc2d) # bernoulli distribution
rbern(1, 0.5)
rbern(1, prob = 0.5)
rbern(2, prob = 0.5)
rbern(5, prob = 0.5)
rbern(5, prob = 0.5)
rbern(5, prob = 0.5)
dbern(x = 0.95, prob = 0.5)
dbern(x = 1, prob = 0.5)
dbern(x = 1, prob = 0.5)
dbern(x = 1, prob = 0.5)
dbern(x = 2, prob = 0.5)
dbern(x = 2, prob = 0.5)
dbern(x = 2, prob = 0.5)
dbern(x = 1, prob = 0.5)
dbern(x = 3, prob = 0.5)
dbern(x = 0, prob = 0.5)
dbern(x = 0.5, prob = 0.5)
?dbinom
# binomial distribution
dbinom(c(0.5, 0.75, 1), 1, prob = 0.5)
# binomial distribution
qbinom(c(0.5, 0.75, 1), 1, prob = 0.5)
# binomial distribution
qbinom(c(0.5, 0.75, 1), 1, prob = 0.5)
# binomial distribution
qbinom(c(0.5, 0.75, 1), 1, prob = 0.5)
# binomial distribution
qbinom(c(0.5, 0.75, 1), 1, prob = 0.5)
# binomial distribution
qbinom(c(0.5, 0.75, 1), 1, prob = 0.5)
# binomial distribution
qbinom(1, 1, prob = 0.5)
qbinom(1, 1, prob = 0.5)
dbinom(1, 1, prob = 0.5)
dbinom(2, 5, prob = 0.5)
# but what if we want probability of at least one wining in 5 tries?
dbinom(1, 5, prob = 0.5) +
+ dbinom(2, 5, prob = 0.5) +
+ dbinom(3, 5, prob = 0.5) +
+ dbinom(4, 5, prob = 0.5) +
+ dbinom(5, 5, prob = 0.5)
# equivalent to
1 - dbinom(0, 5, prob = 0.5)
qbinom(0.96875, 5, prob = 0.5)
# equivalent to
a = 1 - dbinom(0, 5, prob = 0.5)
qbinom(a, 5, prob = 0.5)
qbinom(1, 5, prob = 0.5)
qbinom(0.5, 5, prob = 0.5)
qbinom(0.5, 1, prob = 0.5, lower.tail = FALSE)
qbinom(0.5, 1, prob = 0.5)
?dnbinom
dnbinom(1, 1, prob = 0.5)
?dbinom
?dgeom
dgeom(1, prob = 0.5)
dgeom(0, prob = 0.5)
# 1 porazka, po czym zwyciestwo
dgeom(1, prob = 0.5)
# 2 porazki, po czym zwyciestwo
dgeom(1, prob = 0.5)
# 2 porazki, po czym zwyciestwo
dgeom(2, prob = 0.5)
pgeom(0,25, prob = 0.5)
# 1 porazka, po czym zwyciestwo
dgeom(1, prob = 0.5)
pgeom(0,25, prob = 0.5)
pgeom(0, prob = 0.5)
pgeom(1, prob = 0.5)
pgeom(2, prob = 0.5)
pgeom(3, prob = 0.5)
pgeom(2, prob = 0.5)
dgeom(0, prob = 0.5) + dgeom(1, prob = 0.5) + dgeom(2, prob = 0.5)
pgeom(2, prob = 0.5)
qgeom(0.875, prob = 0.5)
pgeom(1, prob = 0.5)
# qgeom to funkcja odwrotna do pgeom
qgeom(0.875, prob = 0.5)
wr_benchmark = read.xlsx('Assumptions/Winter Fest Balance.xlsx', sheet = 'Arkusz1')
wr_benchmark <- as_tibble(wr_benchmark)
# comparison for level_no <= 20 (sample about 10k for this levels)
wr_benchmark_20 <- filter(wr_benchmark, level_no <= 20)
wr_real_20 <- filter(wr_real, level_no <= 20)
# 95% pewnosci ze wygra vs zalozenia
attempts_benchmark <- tibble(level_no = wr_benchmark_20$level_no
, bechmark_attempts = wr_benchmark_20$attempts
, attempts = qgeom(0.95, prob = wr_benchmark_20$win_ratio))
View(attempts_benchmark)
View(attempts_benchmark)
# 95% pewnosci ze wygra vs zalozenia
attempts_benchmark <- tibble(level_no = wr_benchmark_20$level_no
, bechmark_attempts = wr_benchmark_20$attempts
, attempts = qgeom(0.95, prob = wr_benchmark_20$win_ratio) + 1)
View(wr_benchmark)
View(wr_benchmark)
attempts_real <- tibble(level_no = wr_real_20$level_no
, attempts = qgeom(0.95, prob = wr_real_20$win_ratio) + 1)
View(attempts_real)
View(attempts_real)
