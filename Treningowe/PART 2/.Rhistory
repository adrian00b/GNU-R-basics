, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, probability = T)
hist(daneSoc$wiek
, breaks = 2
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, probability = T
, cex.names = 1)
hist(daneSoc$wiek
, breaks = 2
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, probability = T
, cex.names = 1
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, probability = T
, cex.names = 1
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, ylim = c(20, 80)
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, ylim = c(20, 80)
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, ylim = c(20, 80)
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 14
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, xlim = c(20, 80)
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 1
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, xlim = c(20, 80)
, probability = T
, density = T)
hist(daneSoc$wiek
, breaks = 10
, main = 'Age histogram'
, las = 1
, xlab = 'Age'
, ylab = 'Amount'
, xlim = c(20, 80)
, probability = T
, density = T)
uniform_sample <- runif(1000, 1, 10)
hist(uniform_sample
, breaks = 10)
hist(uniform_sample
, breaks = 10
, las = 1)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(0, 10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 1)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.5)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lab = 10)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lab = c(10, 10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lab = c(10, 10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lab = c(20, 10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lab = c(20, 10, 1)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lty = c (1,10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, lty = c (1,10)
, tcl = 0.5
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, tcl = 0.5
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, xaxp = c(1,10,1)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, xaxp = c(1, 10, 10)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, xaxp = c(1, 10, 9)
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, xaxp = c(1, 10, 9)
, main = 'Uniform distribution histogram'
, xlab = 'Number'
, ylab = 'Probability'
)
hist(uniform_sample
, breaks = 10
, las = 1
, probability = T
, xlim = c(1, 10)
, cex.axis = 0.8
, xaxp = c(1, 10, 9)
, main = 'Uniform distribution histogram'
, xlab = 'Number'
, ylab = 'Probability'
, col = 'grey'
, border = 'white'
)
library(dplyr)
library(Przewodnik)
head(auta)
Sys.Date()
as.Date(Sys.Date(), "%Y")
as.Date(Sys.Date(), "%Y")
format(Sys.Date(), "%Y")
auta %>%
summarise(
avg_price = mean(auta$Cena)
, med_mileage = median(auta$Przebieg)
, avg_age = mean(format(Sys.Date(), "%Y") - auta$Produkcja)
, sample = n()
)
as.Date(Sys.Date(), "%Y") - 1
as.Date(Sys.Date(), "%Y") - 1
format(Sys.Date(), "%Y")
format(Sys.Date(), "%Y")-1
auta %>%
summarise(
avg_price = mean(auta$Cena)
, med_mileage = median(auta$Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - auta$Produkcja)
, sample = n()
)
library(sqldf)
sqldf(SELECT *
FROM auta)
sql(SELECT *
FROM auta)
sqldf("SELECT *
FROM auta")
auta %>%
summarise(
avg_price = mean(auta$Cena)
, med_mileage = median(auta$Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - auta$Produkcja)
, sample = n()
)
sqldf("
SELECT AVG(Cena) AS avg_price
, MEDIAN(Przebieg) AS med_milea
FROM auta
")
sqldf("
SELECT AVG(Cena) AS avg_price
, MEDIAN(Przebieg) AS med_milea
, MAX(TODAY())
FROM auta
")
sqldf(
"
SELECT date('now')
"
)
sqldf(
"
SELECT date('%Y%, 'now')
"
)
sqldf(
"
SELECT date('%Y', 'now')
"
)
sqldf(
"
SELECT date('y', 'now')
"
)
sqldf(
"
SELECT date('now')
"
)
sqldf(
"
SELECT date('now', '%y)
"
)
sqldf(
"
SELECT date('now', '%y')
"
)
sqldf(
"
SELECT date('now', '%Y')
"
)
sqldf(
"
SELECT strftime('%Y', 'now')
"
)
sqldf(
"
SELECT strftime('%Y', 'now') - 2
"
)
# funkcje dat w RSQLite https://www.sqlite.org/lang_datefunc.html
sqldf("
SELECT AVG(Cena) AS avg_price
, MEDIAN(Przebieg) AS med_milea
, AVG(strftime('%Y', 'now') - Produkcja) AS avg_age
, COUNT(*) AS sample
FROM auta
")
auta %>%
summarise(
avg_price = mean(auta$Cena)
, med_mileage = median(auta$Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - auta$Produkcja)
, sample = n()
)
auta %>%
group_by(Marka) %>%
summarise(
avg_price = mean(auta$Cena)
, med_mileage = median(auta$Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - auta$Produkcja)
, sample = n()
)
auta %>%
summarise(
avg_price = mean(Cena)
, med_mileage = median(Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - Produkcja)
, sample = n()
)
auta %>%
group_by(Marka) %>%
summarise(
avg_price = mean(Cena)
, med_mileage = median(Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - Produkcja)
, sample = n()
)
auta %>%
group_by(Marka) %>%
summarise(
avg_price = mean(Cena)
, med_mileage = median(Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - Produkcja)
, sample = n()
) %>%
arrange(avg_price)
auta %>%
group_by(Marka) %>%
summarise(
avg_price = mean(Cena)
, med_mileage = median(Przebieg)
, avg_age = mean(as.numeric(format(Sys.Date(), "%Y")) - Produkcja)
, sample = n()
) %>%
arrange(desc(avg_price))
sqldf("
SELECT AVG(Cena) AS avg_price
, MEDIAN(Przebieg) AS med_milea
, AVG(strftime('%Y', 'now') - Produkcja) AS avg_age
, COUNT(*) AS sample
FROM auta
GROUP BY Marka
ORDER BY avg_price DESC
")
sqldf("
SELECT Marka
, AVG(Cena) AS avg_price
, MEDIAN(Przebieg) AS med_milea
, AVG(strftime('%Y', 'now') - Produkcja) AS avg_age
, COUNT(*) AS sample
FROM auta
GROUP BY Marka
ORDER BY avg_price DESC
")
library(ggplot2)
arrange(Marki, desc(AvgPrice)) %>%
ggplot(aes(factor(Marka), AvgPrice, Amount)) +
geom_bar(stat="identity", position = "dodge", col="red", fill="red")
barplot(Marki$AvgPrice, names.arg = Marki$Marka, ylab="Average Price", xlab="Mark", ylim=c(0,60000))
group_by(auta,Marka) %>%
summarise(AvgPrice=mean(Cena), MedMileage=median(Przebieg), AvgAge=mean(2019-Produkcja), Amount=n()) %>%
arrange(desc(AvgPrice))->Marki
barplot(Marki$AvgPrice, names.arg = Marki$Marka, ylab="Average Price", xlab="Mark", ylim=c(0,60000))
barplot(Marki$AvgPrice, Marki$Amount, names.arg = Marki$Marka, ylab="Average Price", xlab="Mark", ylim=c(0,60000))
library(ggplot2)
arrange(Marki, desc(AvgPrice)) %>%
ggplot(aes(factor(Marka), AvgPrice, Amount)) +
geom_bar(stat="identity", position = "dodge", col="red", fill="red")
arrange(Marki, desc(AvgPrice)) %>%
ggplot(aes(x=Marka, y=AvgPrice)) +
geom_bar(stat="identity", position = "dodge", col="red", fill="red") ->p
b1<-barplot(Marki$AvgPrice, names.arg = Marki$Marka, ylab="Average Price", xlab="Mark", ylim=c(0,60000))
b2<-barplot(Marki$Amount, names.arg = Marki$Marka, ylab="Amount", xlab="Mark")
auta %>%
select(Marka, Cena, Przebieg) %>%
group_by(Marka) %>%
mutate(Przebieg = Przebieg/mean(Przebieg))
sqldf(
"
SELECT Marka
, Cena
, Przebieg / AVG(Przebieg) OVER (PARTITION BY Marka)
FROM auta
"
)
sqldf(
"
SELECT Marka
, Cena
, Przebieg / AVG(Przebieg) OVER (PARTITION BY Marka) AS normalized_mileage
FROM auta
"
)
sqldf(
"
SELECT Marka
, Cena
, ROUND(Przebieg / AVG(Przebieg) OVER (PARTITION BY Marka), 2) AS normalized_mileage
FROM auta
"
)
(eurostat)
install.packages("eurostat", dependencies = T)
getEurostatRaw('tdsr210')
?getEurostatRaw
getEurostatRaw('t2020_rk310')
# pobieramy dane z eurostatu
data1=get_eurostat("t2020_rk310", time_format = "num")
?read.csv2
read.csv2('7/to_spread.csv')
to_spread <- read.csv2('7/to_spread.csv')
?spread
library(tidyr)
?spread
to_spread %>%
spread(year)
to_spread %>%
spread(year)
spread(to_spread, year)
to_spread <- read.csv2('7/to_spread.csv')
spread(to_spread, to_spread)
open('7/to_spread.csv')
openFile('7/to_spread.csv')
file.edit('7/to_spread.csv')
to_spread <- read.csv2('7/to_spread.csv')
to_spread
spread(to_spread, to_spread)
spread(to_spread, year)
spread(to_spread, to_spread$year)
spread(to_spread, year, value)
spread(to_spread, country, value)
