View(dens)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)
)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)/sum(dens$y)
)
xyplot( y_ecdf ~ x
, data = dens
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "red"
)
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
dens <- density(kidney$recipient.age, adjust = 1)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)/sum(dens$y)
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
dens <- density(kidney$recipient.age, adjust = 0.1)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)/sum(dens$y)
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
range(kidney$recipient.age)
diff(range(kidney$recipient.age))
# extend range of density
e <- 0.1 * diff(range(kidney$recipient.age))
dens <- density(kidney$recipient.age
, adjust = 1
, from = min(kidney$recipient.age) - e
, to = max(kidney$recipient.age) + e
)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)/sum(dens$y)
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
dens <- density(kidney$recipient.age
, adjust = 0.1
, from = min(kidney$recipient.age) - e
, to = max(kidney$recipient.age) + e
)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)/sum(dens$y)
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
plot(
ecdf(
kidney$recipient.age
)
, type = "l"
)
plot(
ecdf(
kidney$recipient.age
)
#, type = "l"
)
plot(
ecdf(
kidney$recipient.age
)
, type = "l"
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
dens <- density(kidney$recipient.age
# adjust parameter (bw, bandwidth) - im wiekszy tym wieksze dopasowanie krzywej (np. dla 0.1 duzo bardziej dopasowne)
, adjust = 1
, from = min(kidney$recipient.age) - e
, to = max(kidney$recipient.age) + e
)
dens <- tibble(
x = dens$x
, y = dens$y
, y_ecdf = cumsum(dens$y)/sum(dens$y)
)
xyplot( y_ecdf ~ x
, data = dens
, type = "l"
, lw = 2
) + as.layer(
ecdfplot( ~ recipient.age
, data = kidney
, col = "orangered"
)
)
library(lattice)
library(PBImisc)
library(tibble)
head(kidney)
qqmath( ~ recipient.age, distribution = qnorm)
qqmath( ~ recipient.age
, data = kidney
, distribution = qnorm
)
qqmath( ~ recipient.age
, data = kidney
, distribution = qbeta
)
qqmath( ~ recipient.age
, data = kidney
, distribution = qcauchy
)
densityplot(kidney$recipient.age)
plot(dcauchy())
plot(dcauchy(0, 1))
x <- seq(-10, 10, length = 100)
cauchy = dcauchy(x)
xyplot(cauchy ~ x
)
qqmath( ~ recipient.age
, data = kidney
, distribution = qcauchy
)
cauchy = dcauchy(x)
xyplot(cauchy ~ x
)
library(lattice)
library(PBImisc)
library(MASS)
head(kidney)
# but first, cloud plot
cloud(MDRD30 ~ MDRD7 + MDRD12
, data = kidney
)
?cloud
# but first, cloud plot
cloud(MDRD30 ~ MDRD7 + MDRD12
, data = kidney
)
?kde2d
density_2d <- kde2d(kidney$MDRD7, kidney$MDRD30, n = 50)
?expand.grid()
# we create all combination of x, y by expand.grid(x_name = x, y_name = y) function
coords <- tibble(
expand.grid(MDRD7 = density_2d$x, MDRD30 = density_2d$y)
, z = density_2d$z
)
# we create all combination of x, y by expand.grid(x_name = x, y_name = y) function
coords <- tibble(
expand.grid(MDRD7 = density_2d$x, MDRD30 = density_2d$y)
, z = c(density_2d$z)
)
View(coords)
# we create all combination of x, y by expand.grid(x_name = x, y_name = y) function
coords <- tibble(
expand.grid(MDRD7 = density_2d$x, MDRD30 = density_2d$y)
, z = c(density_2d$z)
)
coords$`expand.grid(MDRD7 = density_2d$x, MDRD30 = density_2d$y)`
levelplot( z ~ MDRD7 + MDRD30
, data = coords
)
levelplot( z ~ MDRD7 * MDRD30
, data = coords
)
# we create all combination of x, y by expand.grid(x_name = x, y_name = y) function
coords <- data.frame(
expand.grid(MDRD7 = density_2d$x, MDRD30 = density_2d$y)
, z = c(density_2d$z)
)
coords$MDRD7
levelplot( z ~ MDRD7 + MDRD30
, data = coords
)
?levelplot
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = F
, cuts = 20
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
)
?levelplot
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions=heat.colors(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions=cm.colors(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions=topo.colors(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions=rainbow(20)
)
install.packages(Viridis)
install.packages("Viridis")
install.packages("viridis")
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions=plasma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions=plasma
)
library(viridis)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = plasma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = inferno(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = virdis(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = virdis(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = inferno(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = magma(20)
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(20)
)
?levelplot
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = list(col = magma(20))
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = list(col = magma(20))
, cuts = 20
, col.regions = magma(30)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = list(col = magma(20))
, cuts = 20
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = list(col = magma(20))
, cuts = 15
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 15
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 18
, col.regions = magma(20)
)
levelplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(30)
)
contourplot( z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(30))
contourplot( z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, colorkey = T
, cuts = 20
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = F
)
# wireframe()  - real 3D objects
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
)
?wireframe
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = F
, drapet = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
, drapet = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
#, shade = T
, drapet = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
, drapet = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
, drape = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
#, shade = T
, drape = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = T
, drape = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, drape = T
, col.regions = magma(30)
)
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, shade = F
)
# with custom palletes
wireframe(z ~ MDRD7 + MDRD30
, data = coords
, cuts = 20
, drape = T
, col.regions = magma(30)
)
