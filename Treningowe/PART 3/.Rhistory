unifd=runif(100,0,1)
hist(unifd)
unifd=runif(1000,0,1)
hist(unifd)
unifd2=replicate(1000, runif(1,0,1))
hist(unifd2)
a=vector()
for (i in 1:10){
a[i]=i^2
}
a
ls()
for (ob in ls()){
size=object.size(ob)
cat("Obiekt", ob, "ma wielkość", size, "bajtów.")
}
for (ob in ls()){
size=object.size(get(ob))
cat("Obiekt", ob, "ma wielkość", size, "bajtów.","\n")
}
vsize=vector()
for(i in seq_along(ls())){
size=object.size(get(ls[i]))
vsize[i]=size
cat("Obiekt", ls[i], "ma wielkość", size, "bajtów.","\n")
}
vsize=vector()
for(i in seq_along(ls())){
size=object.size(get(ls()[i]))
vsize[i]=size
cat("Obiekt", ls[i], "ma wielkość", size, "bajtów.","\n")
}
vsize=vector()
objectlist=ls()
for(i in seq_along(objectlist)){
size=object.size(get(objectlist[i]))
vsize[i]=size
cat("Obiekt", ls[i], "ma wielkość", size, "bajtów.","\n")
}
vsize=vector()
objectlist=ls()
for(i in seq_along(objectlist)){
size=object.size(get(objectlist[i]))
vsize[i]=size
cat("Obiekt", objectlist[i], "ma wielkość", size, "bajtów.","\n")
}
vsize=vector()
objectlist=ls()
for(i in seq_along(objectlist)){
size=object.size(get(objectlist[i]))
vsize[i]=size
cat("Obiekt", objectlist[i], "ma wielkość", size, "bajtów.","\n")
}
vsize
sum(vsize)
sum(vsize[:])
sum(vsize[1])
sum(vsize[1,1])
sum(vsize[])
a=vector()
while(length(a)<10){
a[i]=i^2
}
a=vector()
length(a)
a=vector()
i=1
while(length(a)<10){
a[i]=i^2
i=i+1
}
a
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
max(b)
numeric(4)
numeric()
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i)
b
b=vector()
i=1
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
cat("Ilość iteracji: ", i, "\n")
b
ivector()
i=1
j=1
while(length(ivector<1000)){
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivector[j]=i
j=j+1
}
ivec=vector()
i=1
j=1
while(length(ivec<1000)){
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
j=j+1
}
hist(ivec)
ivec
ivec=vector()
i=1
j=1
while(length(ivec)<1000){
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
j=j+1
}
hist(ivec)
ivec
ivec=vector()
i=1
j=1
while(length(ivec)<1000){
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
j=j+1
}
hist(ivec)
ivec=vector()
j=1
while(length(ivec)<1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
j=j+1
}
hist(ivec)
ivec=vector()
for (j in 1:100){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
ivec=vector()
for (j in 1:1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
ivec=vector()
for (j in 1:1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
ivec=vector()
for (j in 1:1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
ivec=vector()
for (j in 1:1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
ivec=vector()
for (j in 1:1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
ivec=vector()
for (j in 1:1000){
i=1
b=vector()
while(max(b)<95){
b[i]=runif(1,0,100)
i=i+1
}
ivec[j]=i
}
hist(ivec)
a=1
b=c(a,2)
b
i=1
repeat{
a=runif(1,0,100)
if (a<95){
i=i+1
} else break
}
cat("Liczba iteracji:", i)
i=1
repeat{
a=runif(1,0,100)
if (a<95){
i=i+1
} else break
}
cat("Liczba iteracji:", i)
i=1
repeat{
a=runif(1,0,100)
if (a<95){
i=i+1
} else break
}
cat("Liczba iteracji:", i)
i=1
repeat{
a=runif(1,0,100)
if (a<95){
i=i+1
} else break
}
cat("Liczba iteracji:", i)
i=1
repeat{
a=runif(1,0,100)
if (a<95){
i=i+1
} else break
}
cat("Liczba iteracji:", i)
con <- DBI::dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "Northwind",
Trusted_Connection = "True")
install.packages(odbc)
install.packages("odbc")
library(odbc)
con <- DBI::dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "Northwind",
Trusted_Connection = "True")
dbListTables(con)
head(dbListTables(con),10)
dbListTables(con, catalog_name="Northwind")
dbListTables(con, schema_name="Northwind")
dbListTables(con, table_name="Northwind")
dbListTables(con, table_name="Northwind.dbo")
dbListTables(con, catalog_name="Northwind.dbo")
dbListTables(con, catalog_name="dbo")
dbListTables(con, schema_name="dbo")
dbListTables(con, schema_name="dbo", table_type="table")
con <- DBI::dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "pracownicy",
Trusted_Connection = "True")
head(dbListTables(con),10)
dbListTables(con, schema_name="dbo", table_type="table")
dbReadTable(con, "ETATY")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
install.packages("DBI")
library(DBI)
dbReadTable(con, "ETATY")
con <- DBI::dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "pracownicy",
Trusted_Connection = "True")
dbReadTable(con, "ETATY")
odbcListColumns(con, table="ETATY")
library(odbc)
odbcListColumns(con, table="ETATY")
odbcListColumns(con, "ETATY")
dbReadTable(con, "ETATY")
dbGetQuery(con,
"SELECT NAZWA, PLACA_OD, PLACA_DO
FROM ETATY
WHERE PLACA_OD>2000")
odbcListFields(con, table="ETATY")
library(dplyr)
dbl(con, "ETATY")
library(dplyr)
dbl(con, "ETATY")
tbl(con, "ETATY")
ETATY=dbReadTable(con, "ETATY")
ETATY
ETATY %>%
select(NAZWA,PLACA_OD,PLACA_DO) %>%
filter(PLACA_OD>2000)
PRACOWNICY=dbReadTable(con, "PRACOWNICY")
PRACOWNICY
dbGetQuery(con,
"SELECT ETAT, AVG(PLACA_POD+PLACA_DOD)
FROM PRACOWNICY
GROUP BY ETAT")
dbGetQuery(con,
"SELECT ETAT, AVG(PLACA_POD+ISNULL(0,PLACA_DOD))
FROM PRACOWNICY
GROUP BY ETAT")
dbGetQuery(con,
"SELECT ETAT, ROUND(AVG(PLACA_POD+ISNULL(0,PLACA_DOD)),2) AS 'AVG Salary'
FROM PRACOWNICY
GROUP BY ETAT")
dbGetQuery(con,
"SELECT ETAT, ROUND(AVG(PLACA_POD+ISNULL(0,PLACA_DOD)),2) AS 'AVG_Salary'
FROM PRACOWNICY
GROUP BY ETAT")
dbGetQuery(con,
"SELECT ETAT, ROUND(AVG(PLACA_POD+ISNULL(0,PLACA_DOD)),2) AS 'AVG_Salary'
FROM PRACOWNICY
GROUP BY ETAT
ORDER BY 2 DESC")
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(mean(PLACA_POD+is.na(PLACA_DOD)<-0)
/
oo
////33r
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(mean(PLACA_POD+is.na(PLACA_DOD)<-0))
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(mean(PLACA_POD+(is.na(PLACA_DOD)<-0))
434g
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(mean(PLACA_POD+(is.na(PLACA_DOD)<-0)))
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=mean(PLACA_POD+(is.na(PLACA_DOD)<-0)))
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=mean(PLACA_POD+(is.na(PLACA_DOD)<-0)))%>%
arrange(desc(AVG_Salary)
343dfhkl
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=mean(PLACA_POD+(is.na(PLACA_DOD)<-0)))%>%
arrange(desc(AVG_Salary))
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=round(mean(PLACA_POD+(is.na(PLACA_DOD)<-0))),2)%>%
arrange(desc(AVG_Salary))
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=round(mean(PLACA_POD+(is.na(PLACA_DOD)<-0)),2))%>%
arrange(desc(AVG_Salary))
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=round(mean(PLACA_POD+(is.na(PLACA_DOD)<-0)),2))%>%
arrange(desc(AVG_Salary))->query1
View(query1)
PRACOWNICY %>%
group_by(ETAT)%>%
summarise(AVG_Salary=round(mean(PLACA_POD+(is.na(PLACA_DOD)=0)),2))%>%
arrange(desc(AVG_Salary))->query1
View(query1)
View(query1)
