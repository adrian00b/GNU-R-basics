f2 <- function(){
a + 1
}
list(f1 = f1, f2 = f2)
}}()
fun_anon$f1()
fun_anon$f2()
fun_anon$f2()
fun_anon$f1()
fun_anon$f2()
class(fun_anon)
rejestr <- { function(){
licznik <- 0
get <- function() licznik
# tutaj stosujemy <<-, poniewaz chcemy zmienic wartosc obiektu licznik ktory jest w wyzszej przestrzeni nazw
set <- function(x) licznik <<- x
inc <- function() licznik <<- licznik + 1
list(get = get, set = set, inc = inc)
}
}
rejestr <- { function(){
licznik <- 0
get <- function() licznik
# tutaj stosujemy <<-, poniewaz chcemy zmienic wartosc obiektu licznik ktory jest w wyzszej przestrzeni nazw
set <- function(x) licznik <<- x
inc <- function() licznik <<- licznik + 1
list(get = get, set = set, inc = inc)
}}()
rejestr$get()
rejestr$set(5)
rejestr$get()
rejestr$inc()
rejestr$get()
rejestr$inc()
rejestr$get()
rejestr$set(5)
rejestr$get()
imie <- factor('Adrian')
summary(imie)
table(imie)
tabulate(imie)
class(imie)
mode(imie)
typeof(imie)
str(imie)
hist1 <- hist(1:10)
str(imie)
str(hist1)
fix(imie)
a1 = c(1:10)
fix(a1)
attributes(a1)
?tapply
install.packages('SmarterPoland')
library('SmarterPoland')
wypadkiWaska <- getEurostatRCV("tsdtr420")
wypadkiWaska <- getEurostatRCV("tsdtr420")
wypadkiWaska <- getEurostatRCV("sdg_11_40")
head(wypadkiWaska)
library(sqldf)
sqldf(
"
SELECT geo
, AVG(value) AS avg_value
FROM wypadkiWaska
GROUP BY geo
"
)
sqldf(
"
SELECT geo
, AVG(value) AS avg_value
FROM wypadkiWaska
GROUP BY geo
ORDER BY 1
"
)
sqldf(
"
SELECT geo
, AVG(value) AS avg_value
FROM wypadkiWaska
GROUP BY geo
ORDER BY 2 DESC
"
)
library(dplyr)
wypadkiWaska %>%
group_by() %>%
summarise(avg_value = AVG(value))
wypadkiWaska %>%
group_by() %>%
summarise(avg_value = mean(value))
group_by(wypadkiWaska, geo) %>%
summarise(avg_value = mean(value))
group_by(wypadkiWaska, geo) %>%
summarise(avg_value = mean(value)) %>%
arrange(desc(avg_value))
?tapply
tapply(wypadkiWaska$value, wypadkiWaska$geo, FUN = mean)
ex1 <- sqldf(
"
SELECT geo
, AVG(value) AS avg_value
FROM wypadkiWaska
GROUP BY geo
ORDER BY 2 DESC
"
)
class(ex1)
class(ex2)
ex2 <- group_by(wypadkiWaska, geo) %>%
summarise(avg_value = mean(value)) %>%
arrange(desc(avg_value))
class(ex2)
class(ex1)
class(ex2)
mode(ex2)
mode(ex1)
str(ex2)
class(ex3)
ex3 <- tapply(wypadkiWaska$value, wypadkiWaska$geo, FUN = mean)
class(ex3)
mode(ex3)
str(ex3)
head(ex3)
ex3[1]
ex2[1]
ex2[1, ]
?by
ex4 <- by(wypadkiWaska$value, wypadkiWaska$geo, FUN = mean)
ex4
class(ex4)
mode(ex4)
str(ex4)
?aggregate
# mozna tez uzyc funkcji aggregate
aggregate(wypadkiWaska$value, wypadkiWaska$geo, FUN = mean)
# mozna tez uzyc funkcji aggregate
aggregate(wypadkiWaska$value, by = list(wypadkiWaska$geo), FUN = mean)
wypadkiWaska$value > 1000
library('SmarterPoland')
wypadkiWaska <- getEurostatRCV("sdg_11_40")
installed.packages('plyr')
install.packages('plyr')
library('plyr')
# regresja w podzbiorach okreslonych zmienna geo
head(wypadkiWaska)
summary(wypadkiWaska)
?ddply
library(dplyr)
,(a)
.(a)
class(.(a))
a=.(a)
a
a[1]
a[[1]]
head(wypadkiWaska)
?lm
regre_v1 <- wypadkiWaska %>%
ddply(, .variables =  c('geo'),
.fun = function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- wypadkiWaska %>%
ddply(, .variables =  .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
class(wypadkiWaska$time)
class(wypadkiWaska$type)
typeof(wypadkiWaska$type)
typeof(wypadkiWaska$time)
regre_v1 <- wypadkiWaska %>%
ddply(, .variables =  .(geo), .fun = function(X) lm(value ~ as.numeric(time), data = x)$coef)
regre_v1 <- ddply(wypadkiWaska, .variables =  .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- ddply(wypadkiWaska, .variables =  .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- ddply(wypadkiWaska, .variables =  .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- ddply(wypadkiWaska, .variables =  .(geo), .fun = function(X) lm(value ~ time, data = x)$coefficients)
head(wypadkiWaska)
?ddply
regre_v1 <- wypadkiWaska %>%
ddply(, .variables = .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply(, .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply(, .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply(, .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
ddply(wypadkiWaska, .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
ddply(wypadkiWaska, .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply(, .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
library('dplyr')
regre_v1 <- wypadkiWaska %>%
ddply(, .(geo), .fun = summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
ddply(wypadkiWaska, .(geo), summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply( , .(geo),  summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply( , .(geo),  summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply( , .variables = .(geo),  summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v1 <- wypadkiWaska %>%
ddply( , .variables = .(geo),  summarize
, wspl_kier = lm(value ~ as.numeric(time))$coef[2]
, stala = lm(value ~ as.numeric(time))$coef[1]
, srednia = mean(value, na.rm = T))
ddply(wypadkiWaska, .(geo), summarize, mean = mean(value, na.rm = T))
summart(wypadkiWaska)
summary(wypadkiWaska)
library('plyr')
ddply(wypadkiWaska, .(geo), summarize, mean = mean(value, na.rm = T))
View(wypadkiWaska)
View(wypadkiWaska)
regre_v1 <- filter(wypadkiWaska, unit = 'NR') %>%
ddply(, .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .variables = .(geo), .fun = function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .variables = .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- ddply(filter(wypadkiWaska, unit == 'NR'), .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .variables = .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- ddply(filter(wypadkiWaska, unit == 'NR'), .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- ddply(filter(wypadkiWaska, unit == 'NR'), c('geo'), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .variables = c('geo'), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, c('geo'), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .variables = .(geo), function(X) lm(value ~ time, data = x)$coef)
head(regre_v1)
library('dplyr')
regre_v1 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply(, .variables = .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1
regre_v1 <- ddply(filter(wypadkiWaska, unit == 'NR'), .variables = .(geo), function(X) lm(value ~ time, data = x)$coef)
regre_v1 <- wypadkiWaska %>%
ddply( , .variables = .(geo),  summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
regre_v2 <- filter(wypadkiWaska, unit == 'NR') %>%
ddply( , .variables = .(geo),  summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
head(regre_v2)
regre_v2 <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, wspl_kier = lm(value ~ time)$coef[2]
, stala = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
head(regre_v2)
# postac ax+b, oraz srednia
regre_v2 <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, a = lm(value ~ time)$coef[2]
, b = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
?line
lines(regre_v2)
library('SmarterPoland')
wypadkiWaska <- getEurostatRCV("sdg_11_40")
library('plyr')
library('dplyr')
# regresja w podzbiorach okreslonych zmienna geo
head(wypadkiWaska)
# postac ax+b, oraz srednia
regre_v2 <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, a = lm(value ~ time)$coef[2]
, b = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
# postac ax+b, oraz srednia
regr_coeff <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, a = lm(value ~ time)$coef[2]
, b = lm(value ~ time)$coef[1]
, srednia = mean(value, na.rm = T))
rm(regre_v2)
regr_coeff
abline(a = 0, b = 2)
plot()
abline(a = 0, b = 2)
?plot
plot(NULL)
abline(a = 0, b = 2)
?plot
plot(x = c(), y = c())
plot(x = c(), y = c(), xlim = (0, 3000), ylim = (0,3000))
?plot
plot(x = c(), y = c(), xlim = c(0, 3000), ylim = c(0,3000))
head(regr_coeff)
filter(wypadkiWaska, geo == 'AT' & unit == 'NR')
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(a = 0, b = 2)
abline(a = c(0,2), b = c(2,5))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(a = c(0,2), b = c(2,5))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(a = 0, b = c(2, 100))
?abline
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(coef = c(regr_coeff$b, regr_coeff$a))
abline(coef = c(0, 2))
abline(coef = c(0, 100))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(coef = c(100, 0))
# postac a + bx, oraz srednia
regr_coeff <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, a = lm(value ~ time)$coef[1]
, b = lm(value ~ time)$coef[2]
, srednia = mean(value, na.rm = T))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
regr_coeff$a
regr_coeff$a[1]
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[1], regr_coeff$b[2]))
}
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]))
}
?abline
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]))
text(1,0, regr_coeff$geo)
}
?abline
library(RColorBrewer)
install.packages('RColorBrewer')
install.packages("RColorBrewer")
?brewer.all
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]), col = 'red')
# text(1,0, regr_coeff$geo)
}
?brewer.all
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]), col = display.brewer.all(n = length(regr_coeff$a), type = 'div'))
# text(1,0, regr_coeff$geo)
}
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]), col = display.brewer.all(n = length(regr_coeff$a), type = 'div'))
display.brewer.all()
brewer.pal.info
qual_col_pals = filter(brewer.pal.info, category == 'qual')
?brewer.pal
display.brewer.all()[1]
display.brewer.all()
?brewer.pal
?mapply
?brewer.pal
rownames(qual_col_pals)
qual_col_pals
col_vector = mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))
qual_col_pals = filter(brewer.pal.info, category == 'qual')
brewer.pal.info
qual_col_pals
summary(brewer.pal.info)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual', ]
qual_col_pals
col_vector = mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))
class(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
col_vector
unlist(col_vector)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]), col = col_vector[i])
# text(1,0, regr_coeff$geo)
}
?plot
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff$a)){
abline(coef = c(regr_coeff$a[i], regr_coeff$b[i]), col = col_vector[i])
# text(1,0, regr_coeff$geo)
}
education_stats <- table(daneSoc$wyksztalcenie)
barplot(education_stats
, width = c(1,2,3,4)
, horiz = T
, axes = T
, las = 1
, cex.names = 0.6
, xlim = c(0,100)
, col = c('lavender', 'oldlace', 'red', 'pink')
)
?plot
head(wypadkiWaska)
filter(wypadkiWaska, unit == 'NR' & geo = 'AT')
filter(wypadkiWaska, unit == 'NR' & geo = 'AT')
filter(wypadkiWaska, unit == 'NR' & geo == 'AT')
AT_coef <- filter(regr_coeff, geo = 'AT')
AT_coef <- filter(regr_coeff, geo == 'AT')
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
abline(coef = c(AT_coef$a, AT_coef$b))
View(regr_coeff)
View(regr_coeff)
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c(EU27_2019, EU28))
q
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c(EU27_2019, EU28)))
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c('EU27_2019', 'EU28')))
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c('EU27_2019', 'EU28')))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,3000), xlab = '', ylab = '')
for(i in seq_along(regr_coeff_adjusted$a)){
abline(coef = c(regr_coeff_adjusted$a[i], regr_coeff_adjusted$b[i]), col = col_vector[i])
# text(1,0, regr_coeff$geo)
}
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0, max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
abline(coef = c(regr_coeff_adjusted$a[i], regr_coeff_adjusted$b[i]), col = col_vector[i])
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c('EU27_2019', 'EU28')))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0, max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
for(i in seq_along(regr_coeff_adjusted$a)){
abline(coef = c(regr_coeff_adjusted$a[i], regr_coeff_adjusted$b[i]), col = col_vector[i])
# text(1,0, regr_coeff$geo)
}
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
AT_coef <- filter(regr_coeff, geo == 'IT')
abline(coef = c(AT_coef$a, AT_coef$b))
AT_coef <- filter(regr_coeff, geo == 'PL')
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0,max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
AT_coef <- filter(regr_coeff, geo == 'PL')
abline(coef = c(AT_coef$a, AT_coef$b))
filter(wypadkiWaska, unit == 'NR' & geo == 'PL')
plot(x = c(), y = c(), xlim = c(2000, 2017), ylim = c(0,max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
AT_coef <- filter(regr_coeff, geo == 'PL')
abline(coef = c(AT_coef$a, AT_coef$b))
abline(coef = c(AT_coef$a, AT_coef$b))
AT_coef <- filter(regr_coeff, geo == 'PL')
AT_coef
filter(wypadkiWaska, unit == 'NR' & geo == 'PL')
# postac a + bx, oraz srednia
regr_coeff <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, a = lm(value ~ time)$coef[1]
, b = lm(value ~ time)$coef[2]
, srednia = mean(value, na.rm = T))
View(regr_coeff)
View(regr_coeff)
filter(wypadkiWaska, unit == 'NR' & geo == 'PL')
regr_test <- lm(filter(wypadkiWaska, unit == 'NR' & geo == 'PL'), value ~ time))
regr_test <- lm(filter(wypadkiWaska, unit == 'NR' & geo == 'PL'), value ~ time)
filter(wypadkiWaska, unit == 'NR' & geo == 'PL')
regr_test <- lm(filter(wypadkiWaska, unit == 'NR' & geo == 'PL'), value ~ time)
?lm
regr_test <- lm(value ~ time, filter(unit == 'NR' & geo == 'PL'))
regr_test <- lm(value ~ time, filter(wypadkiWaska, unit == 'NR' & geo == 'PL'))
regr_test$coefficients
regr_test$coef
regr_test <- lm(value ~ as.numeric(time), filter(wypadkiWaska, unit == 'NR' & geo == 'PL'))
regr_test$coefficients
, srednia = mean(value, na.rm = T))
# postac a + bx, oraz srednia
regr_coeff <-  ddply(filter(wypadkiWaska, unit == 'NR') , .variables = .(geo),  summarize
, a = lm(value ~ as.numeric(time))$coef[1]
, b = lm(value ~ as.numeric(time))$coef[2]
, srednia = mean(value, na.rm = T))
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c('EU27_2019', 'EU28')))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0, max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
for(i in seq_along(regr_coeff_adjusted$a)){
abline(coef = c(regr_coeff_adjusted$a[i], regr_coeff_adjusted$b[i]), col = col_vector[i])
# text(1,0, regr_coeff$geo)
}
View(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
View(qual_col_pals)
?mapply
regr_coeff_adjusted <- filter(regr_coeff, !(geo %in% c('EU27_2019', 'EU28')))
plot(x = c(), y = c(), xlim = c(0, 18), ylim = c(0, max(regr_coeff_adjusted$a) + 500), xlab = '', ylab = '')
for(i in seq_along(regr_coeff_adjusted$a)){
abline(coef = c(regr_coeff_adjusted$a[i], regr_coeff_adjusted$b[i]), col = col_vector[i])
# text(1,0, regr_coeff$geo)
}
